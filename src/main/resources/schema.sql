/* Clean re-run (drop children â†’ parents) */
DROP TABLE IF EXISTS PRESCRIPTION;
DROP TABLE IF EXISTS APPOINTMENT;
DROP TABLE IF EXISTS PATIENT;
DROP TABLE IF EXISTS DOCTOR;
DROP TABLE IF EXISTS DEPARTMENT;
DROP TABLE IF EXISTS USERS;
DROP TABLE IF EXISTS ROLES;

/* ROLES */
CREATE TABLE ROLES (
  ID   INT GENERATED BY DEFAULT AS IDENTITY (START WITH 1000) PRIMARY KEY,
  NAME VARCHAR(50) NOT NULL UNIQUE                 -- ADMIN, DOCTOR, PATIENT
);

/* USERS */
CREATE TABLE USERS (
  ID            INT GENERATED BY DEFAULT AS IDENTITY (START WITH 1000) PRIMARY KEY,
  USERNAME      VARCHAR(100) NOT NULL UNIQUE,
  EMAIL         VARCHAR(180) NOT NULL UNIQUE,
  PASSWORD_HASH VARCHAR(255) NOT NULL,
  ROLE_ID       INT NOT NULL,
  CONSTRAINT FK_USERS_ROLE FOREIGN KEY (ROLE_ID) REFERENCES ROLES(ID)
);

/* DEPARTMENT */
CREATE TABLE DEPARTMENT (
  ID   INT GENERATED BY DEFAULT AS IDENTITY (START WITH 1000) PRIMARY KEY,
  NAME VARCHAR(120) NOT NULL UNIQUE
);

/* DOCTOR */
CREATE TABLE DOCTOR (
  ID                INT GENERATED BY DEFAULT AS IDENTITY (START WITH 1000) PRIMARY KEY,
  USER_ID           INT UNIQUE,                   -- optional link to USERS
  DEPARTMENT_ID     INT NOT NULL,
  NAME              VARCHAR(120) NOT NULL,
  PHONE             VARCHAR(30),
  YEARS_EXPERIENCE  INT CHECK (YEARS_EXPERIENCE >= 0),
  CONSTRAINT FK_DOCTOR_USER FOREIGN KEY (USER_ID) REFERENCES USERS(ID) ON DELETE SET NULL,
  CONSTRAINT FK_DOCTOR_DEPT FOREIGN KEY (DEPARTMENT_ID) REFERENCES DEPARTMENT(ID)
);

/* PATIENT */
CREATE TABLE PATIENT (
  ID        INT GENERATED BY DEFAULT AS IDENTITY (START WITH 1000) PRIMARY KEY,
  USER_ID   INT UNIQUE,                            -- optional link to USERS
  FULL_NAME VARCHAR(120) NOT NULL,
  EMAIL     VARCHAR(180) NOT NULL UNIQUE,
  PHONE     VARCHAR(30),
  DOB       DATE,
  ADDRESS   VARCHAR(255),
  CONSTRAINT FK_PATIENT_USER FOREIGN KEY (USER_ID) REFERENCES USERS(ID) ON DELETE SET NULL
);

/* APPOINTMENT */
CREATE TABLE APPOINTMENT (
  ID          INT GENERATED BY DEFAULT AS IDENTITY (START WITH 1000) PRIMARY KEY,
  DOCTOR_ID   INT NOT NULL,
  PATIENT_ID  INT NOT NULL,
  START_TIME  TIMESTAMP NOT NULL,
  END_TIME    TIMESTAMP NOT NULL,
  STATUS      VARCHAR(20) NOT NULL DEFAULT 'PENDING',  -- PENDING/BOOKED/CANCELLED/CONFIRMED/NO_SHOW
  CREATED_AT  TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT FK_APPT_DOCTOR  FOREIGN KEY (DOCTOR_ID) REFERENCES DOCTOR(ID),
  CONSTRAINT FK_APPT_PATIENT FOREIGN KEY (PATIENT_ID) REFERENCES PATIENT(ID),
  CONSTRAINT CK_APPT_STATUS  CHECK (STATUS IN ('PENDING','BOOKED','CANCELLED','CONFIRMED','NO_SHOW')),
  CONSTRAINT CK_APPT_TIME    CHECK (END_TIME > START_TIME)
);

/* PRESCRIPTION */
CREATE TABLE PRESCRIPTION (
  ID             INT GENERATED BY DEFAULT AS IDENTITY (START WITH 1000) PRIMARY KEY,
  APPOINTMENT_ID INT NOT NULL UNIQUE,
  NOTES          CLOB,
  MEDICINES_TEXT CLOB,
  CREATED_AT     TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT FK_PRESC_APPT FOREIGN KEY (APPOINTMENT_ID) REFERENCES APPOINTMENT(ID) ON DELETE CASCADE
);
